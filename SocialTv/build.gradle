plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.spr'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'software.amazon.awssdk:s3:2.15.40'
	implementation 'org.modelmapper:modelmapper:2.3.8'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// 유효성체크
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// json
	implementation 'org.json:json:20230227'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Redis cache
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//jsoup 의존성 추가
	implementation 'org.jsoup:jsoup:1.15.3'

	// === QueryDsl 시작 ===
	// == 스프링 부트 3.0 이상 ==
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}
// Querydsl 설정부
def querydslSrcDir = 'src/main/generated'

clean {
	delete file (querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
